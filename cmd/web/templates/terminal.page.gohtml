{{template "base" .***REMOVED******REMOVED***

{{define "title"***REMOVED******REMOVED***
    Virtual Terminal
{{end***REMOVED******REMOVED***


{{define "content"***REMOVED******REMOVED***
<div class="row">
    <div class="col-md-6 offset-md-3">
        <h2 class="mt-3 text-center">Virtual Terminal</h2>
        <hr>
        <div id="card-messages" class="alert alert-danger text-center d-none"></div>
        <form 
            action="" 
            method="post"
            name="charge_form"
            id="charge_form"
            class="d-block needs-validation charge-form"
            autocomplete="off" 
            novalidate="">
            <div class="mb-3">
                <label for="charge_amount" class="form-label">Amount</label>
                <input type="text" class="form-control" id="charge_amount"
                    required="" autocomplete="charge_amount-new">
            </div>

            <div class="mb-3">
                <label for="cardholder-name" class="form-label">Cardholder name</label>
                <input type="text" class="form-control" id="cardholder-name" name="cardholder_name"
                    required="" autocomplete="cardholder-name-new">
            </div>

            <div class="mb-3">
                <label for="cardholder-email" class="form-label">Cardholder Email</label>
                <input type="email" class="form-control" id="cardholder-email" name="email"
                    required="" autocomplete="cardholder-email-new">
            </div>

            <div class="mb-3">
                <label for="card-element" class="form-label">Credit card</label>
                <div id="card-element" class="form-control" ></div>
                <div id="card-errors" class="alert-danger text-center" role="alert"></div>
                <div id="card-success" class="alert-success text-center" role="alert"></div>
            </div>

            <a id="pay-button" href="javascript:void(0***REMOVED***" class="btn btn-primary" onclick="val(***REMOVED***">Charge Card</a>
            <div id="processing-payment" class="text-center d-none">
                <div class="spinner-border text-primary" role="status" >
                    <span class="visually-hidden">Loading...</span>
                </div>
            </div>
            <input type="hidden" name="amount" id="amount" />
            <input type="hidden" name="payment_intent" id="payment_intent" />
            <input type="hidden" name="payment_method" id="payment_method" />
            <input type="hidden" name="payment_amount" id="payment_amount" />
            <input type="hidden" name="payment_currency" id="payment_currency" />
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-6 offset-md-3 d-none" id="receipt">
        <h3 class="mt-3 text-center">Receipt</h3>
        <hr />
        <p><strong>Bank Return Code</strong>: <span id="bank-return-code"></span></p>
        <p>
            <a class="btn btn-primary" href="/admin/virtual-terminal">
                Change another card
            </a>
        </p>
    </div>
</div>

{{end***REMOVED******REMOVED***
<script>
    checkAuth(***REMOVED***
    document.getElementById("charge_amount"***REMOVED***.addEventListener("change", function(evt***REMOVED***{
        if (evt.target.value !== ""***REMOVED*** {
            document.getElementById("amount"***REMOVED***.value = parseInt((evt.target.value * 100***REMOVED***,10***REMOVED***;
        ***REMOVED*** else {
            document.getElementById("amount"***REMOVED***.value = 0;
        ***REMOVED***
    ***REMOVED******REMOVED***
</script>
{{define "js"***REMOVED******REMOVED***
<script src="https://js.stripe.com/v3/"></script>
    <script>
    let card;
    let stripe;
    const cardMessages = document.getElementById("card-messages"***REMOVED***
    const payButton = document.getElementById("pay-button"***REMOVED***
    const processing = document.getElementById("processing-payment"***REMOVED***

    stripe = Stripe("{{.StripePublishableKey***REMOVED******REMOVED***"***REMOVED***;
   
    function hidePayButton(***REMOVED*** {
        payButton.classList.add("d-none"***REMOVED***
        processing.classList.remove("d-none"***REMOVED***
    ***REMOVED***

    function showPayButton(***REMOVED*** {
        payButton.classList.remove("d-none"***REMOVED***
        processing.classList.add("d-none"***REMOVED***
    ***REMOVED***

    function showCardError(msg***REMOVED*** {
        cardMessages.classList.add("alert-danger"***REMOVED***;
        cardMessages.classList.remove("alert-success"***REMOVED***;
        cardMessages.classList.remove("d-none"***REMOVED***;
        cardMessages.innerText = msg;
    ***REMOVED***

    function showCardSuccess(***REMOVED*** {
        cardMessages.classList.remove("alert-danger"***REMOVED***;
        cardMessages.classList.add("alert-success"***REMOVED***;
        cardMessages.classList.remove("d-none"***REMOVED***;
        cardMessages.innerText = "Transaction successful";
    ***REMOVED***  

    function val(***REMOVED***{
      let form = document.getElementById("charge_form"***REMOVED***
      if(form.checkValidity(***REMOVED*** == false***REMOVED*** {
        this.event.preventDefault(***REMOVED***;
        this.event.stopPropagation(***REMOVED***;
        form.classList.add("was-validated"***REMOVED***;
        return;
      ***REMOVED***
      form.classList.add("was-validated"***REMOVED***
      hidePayButton(***REMOVED***

      let amountToCharge = document.getElementById("amount"***REMOVED***.value
      
      let payload = {
        amount: amountToCharge,
        currency: 'cad',
      ***REMOVED***

      const requestOptions = {
        method: 'post',
        headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json',
        ***REMOVED***,
        body: JSON.stringify(payload***REMOVED***
      ***REMOVED***
     
      fetch("{{.API***REMOVED******REMOVED***/api/payment-intent", requestOptions***REMOVED***
        .then(response => response.text(***REMOVED******REMOVED***
        .then(response => {
            let data;
            try {
                data = JSON.parse(response***REMOVED***
                console.log(data***REMOVED***
                stripe.confirmCardPayment(data.client_secret, {
                    payment_method:{
                        card: card,
                        billing_details: {
                            name: document.getElementById("cardholder-name"***REMOVED***.value
                        ***REMOVED***                    
                    ***REMOVED***

                ***REMOVED******REMOVED***.then(function(result***REMOVED***{
                    console.log(result***REMOVED***
                    if(result.error***REMOVED*** {
                        showCardError(result.error.message***REMOVED***;
                        showPayButton(***REMOVED***;
                    ***REMOVED***else if (result.paymentIntent***REMOVED***{
                        if(result.paymentIntent.status === "succeeded"***REMOVED*** {
                            processing.classList.add("d-none"***REMOVED***;
                            showCardSuccess(***REMOVED***;
                            {{/* form.submit(***REMOVED***; */***REMOVED******REMOVED***
                            saveTransaction(result***REMOVED***
                        ***REMOVED***
                    ***REMOVED***
                ***REMOVED******REMOVED***
            ***REMOVED*** catch (err***REMOVED*** {
                console.log(err***REMOVED***;
                showCardError("Invalid response from payment gateway!"***REMOVED***;
                showPayButton(***REMOVED***;
            ***REMOVED***
        ***REMOVED******REMOVED***
    ***REMOVED***

    function saveTransaction(result***REMOVED***{
        let payload = {
            amount: parseInt(document.getElementById("amount"***REMOVED***.value,10***REMOVED***,
            currency: result.paymentIntent.currency,
            first_name: "",
            last_name: "",
            email: document.getElementById("cardholder-email"***REMOVED***.value,
            payment_intent: result.paymentIntent.id,
            payment_method: result.paymentIntent.payment_method,
        ***REMOVED***

        let token = localStorage.getItem("token"***REMOVED***

        const requestOptions = {
            method: 'post',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + token,
            ***REMOVED***,
            body: JSON.stringify(payload***REMOVED***
        ***REMOVED***

        console.log("requestOptions: ",requestOptions***REMOVED***

        fetch("{{.API***REMOVED******REMOVED***/api/admin/virtual-terminal-succeeded", requestOptions***REMOVED***
            .then(response => response.json(***REMOVED******REMOVED***
            .then(data => {
                console.log("virtual-terminal-succeeded: ",data***REMOVED***
                processing.classList.add("d-none"***REMOVED***;
                showCardSuccess(***REMOVED***
                document.getElementById("bank-return-code"***REMOVED***.innerHTML = data.bank_return_code
                document.getElementById("receipt"***REMOVED***.classList.remove("d-none"***REMOVED***

            ***REMOVED******REMOVED***
    ***REMOVED***

    (function(***REMOVED***{
        // create strpie & elements
        const elements =stripe.elements(***REMOVED***;
        const style = {
            base: {
                fontSize: '16px',
                lineHeight: '24px'
            ***REMOVED***
        ***REMOVED***

        // create card entry
        card = elements.create('card', {
            style: style,
            hidePostalCode: true
        ***REMOVED******REMOVED***
        card.mount("#card-element"***REMOVED***

        // check for input errors
        card.addEventListener('change', function(event***REMOVED*** {
            var displayError = document.getElementById("card-errors"***REMOVED***;
            if(event.error***REMOVED*** {
                displayError.classList.remove('d-none'***REMOVED***;
                displayError.textContent = event.error.message;
            ***REMOVED*** else {
                displayError.classList.add('d-none'***REMOVED***;
                displayError.textContent = '';
            ***REMOVED***
        ***REMOVED******REMOVED***
    ***REMOVED******REMOVED***(***REMOVED***;
    </script>
{{end***REMOVED******REMOVED***